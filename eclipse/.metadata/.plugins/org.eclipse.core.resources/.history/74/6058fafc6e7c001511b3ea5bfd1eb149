package com.sythiex.outerplanes.elysium.amoria;

import java.util.Random;

import com.sythiex.outerplanes.OuterPlanes;

import cpw.mods.fml.common.IWorldGenerator;
import net.minecraft.block.material.Material;
import net.minecraft.init.Blocks;
import net.minecraft.world.World;
import net.minecraft.world.chunk.IChunkProvider;

public class GeneratorElysiumAmoria implements IWorldGenerator
{
	@Override
	public void generate(Random rand, int chunkX, int chunkZ, World world, IChunkProvider chunkGenerator, IChunkProvider chunkProvider)
	{
		System.out.println("is Amoria: " + (world.provider.dimensionId == OuterPlanes.dimAmoriaID));
		if(world.provider.dimensionId == OuterPlanes.dimAmoriaID)
		{
			generateWaterPortal(world, rand, chunkX * 16, chunkZ * 16);
		}
	}
	
	private void generateWaterPortal(World world, Random rand, int x, int z)
	{
		System.out.println("is Oceanus:" + (world.getBiomeGenForCoords(x, z) == OuterPlanes.biomeOceanus));
		if(world.getBiomeGenForCoords(x, z) == OuterPlanes.biomeOceanus)
		{
			int y = getTopBlock(world, x, z);
			if(world.getBlock(x, y, z) == Blocks.water)
			{
				for(int i = x - 3; i <= x + 3; i++)
				{
					for(int k = z - 3; k <= z + 3; z++)
					{
						if(world.getBlock(i, y, k) != Blocks.water)
						{
							return;
						}
					}
				}
				
				System.out.println("generating at " + x + ", " + y + ", " + z);
				
				int minY = y - rand.nextInt(35) + 1;
				for(int i = x - 1; i <= x + 1; i++)
				{
					for(int k = z - 1; k <= z + 1; z++)
					{
						for(int j = minY; j <= y; j++)
						{
							world.setBlockToAir(i, j, k);
						}
					}
				}
			}
		}
	}
	
	/**
	 * returns the y coordinate of the highest block at the given x and z coordinates
	 * @param world
	 * @param x
	 * @param z
	 * @return y
	 */
	private int getTopBlock(World world, int x, int z)
	{
		int y = 256;
		
		while(!world.getBlock(x, y, z).getMaterial().blocksMovement() || (world.getBlock(x, y, z).getMaterial() == Material.leaves) || world.getBlock(x, y, z).isFoliage(world, x, y, z))
		{
			--y;
		}
		return y;
	}
}
