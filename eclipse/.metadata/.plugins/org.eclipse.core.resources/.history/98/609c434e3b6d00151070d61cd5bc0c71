package com.sythiex.outerplanes;

import java.util.Random;

import net.minecraft.block.Block;
import net.minecraft.block.BlockPortal;
import net.minecraft.block.material.Material;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayerMP;
import net.minecraft.init.Blocks;
import net.minecraft.server.MinecraftServer;
import net.minecraft.util.AxisAlignedBB;
import net.minecraft.world.World;

public class PortalOP extends BlockPortal
{
	public static Block portalFrame;
	public static int dimID;
	
	public PortalOP(Block block, int correspDimID)
	{
		super();
		this.portalFrame = block;
		this.dimID = correspDimID;
	}
	
	/*public void updateTick(World world, int x, int y, int z, Random rand)
	{
		
	}*/
	
	@Override
	public void onNeighborBlockChange(World world, int x, int y, int z, Block block)
	{
		byte b0 = 0;
		byte b1 = 1;
		if(world.getBlock(x - 1, y, z) == portalFrame || world.getBlock(x + 1, y, z) == portalFrame)
		{
			b0 = 1;
			b1 = 0;
		}
		
		int i;
		for(i = y; world.getBlock(x, i - 1, z) == this; --i)
		{
			;
		}
		if(world.getBlock(x, i - 1, z) != portalFrame)
		{
			world.setBlockToAir(x, y, z);
		}
		else
		{
			int j;
			for(j = 1; j < 4 && world.getBlock(x, i + j, z) == this; ++j)
			{
				;
			}
			if(j == 3 && world.getBlock(x, i + j, z) == portalFrame)
			{
				boolean flag1 = world.getBlock(x - 1, y, z) == this || world.getBlock(x + 1, y, z) == this;
				boolean flag2 = world.getBlock(x, y, z - 1) == this || world.getBlock(x, y, z + 1) == this;
				
				if(flag1 && flag2)
				{
					world.setBlockToAir(x, y, z);
				}
				else
				{
					if((world.getBlock(x + b0, y, z + b1) != portalFrame || world.getBlock(x - b0, y, z - b1) != this) && (world.getBlock(x - b0, y, z - b1) != portalFrame || world.getBlock(x + b0, y, z + b1) != this))
					{
						world.setBlockToAir(x, y, z);
					}
				}
			}
			else
			{
				world.setBlockToAir(x, y, z);
			}
		}
	}
	
	@Override
	public void onEntityCollidedWithBlock(World world, int x, int y, int z, Entity entity)
	{
		if(entity.ridingEntity == null && entity.riddenByEntity == null && entity instanceof EntityPlayerMP)
		{
			EntityPlayerMP player = (EntityPlayerMP) entity;
			MinecraftServer server = MinecraftServer.getServer();
			if(entity instanceof EntityPlayerMP)
			{
				if(player.timeUntilPortal > 0)
				{
					player.timeUntilPortal = 10;
				}
				else if(player.dimension != dimID)
				{
					player.timeUntilPortal = 10;
					player.mcServer.getConfigurationManager().transferPlayerToDimension(player, dimID, new TeleporterElysium(server.worldServerForDimension(dimID)));
				}
				else
				{
					player.timeUntilPortal = 10;
					player.mcServer.getConfigurationManager().transferPlayerToDimension(player, 0, new TeleporterElysium(server.worldServerForDimension(0)));
				}
			}
		}
	}
	
	public boolean tryToCreatePortal(World world, int x, int y, int z)
	{
		byte b0 = 0;
		byte b1 = 0;
		if(world.getBlock(x - 1, y, z) == portalFrame || world.getBlock(x + 1, y, z) == portalFrame)
		{
			b0 = 1;
		}
		if(world.getBlock(x, y, z - 1) == portalFrame || world.getBlock(x, y, z + 1) == portalFrame)
		{
			b1 = 1;
		}
		
		if(b0 == b1)
		{
			return false;
		}
		else
		{
			if(world.getBlock(x - b0, y, z - b1) == Blocks.air)
			{
				x -= b0;
				z -= b1;
			}
			
			int l;
			int i1;
			for(l = -1; l <= 2; ++l)
			{
				for(i1 = -1; i1 <=3; ++i1)
				{
					boolean flag = l == -1 || l == 2 || i1 == -1 || i1 == 3;
					if(l != -1 && l != 2 || i1 != -1 && i1 != 3)
					{
						Block j1 = world.getBlock(x + b0 * l, y + i1, z + b1 * l);
						if(flag)
						{
							if(j1 != portalFrame)
							{
								return false;
							}
						}
						else if(j1 != Blocks.air && j1 != Blocks.fire)
						{
							return false;
						}
					}
				}
			}
			for(l = 0; l < 2; ++l)
			{
				for(i1 = 0; i1 < 3; ++i1)
				{
					world.setBlock(x + b0 * l, y + i1, z + b1 * l, portalFrame, 0, 2);
				}
			}
		}
		return true;
	}
}
